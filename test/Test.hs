module Main ( main ) where

import qualified Data.Attoparsec.ByteString as A
import qualified Data.ByteString as BS
import           Protolude
import           Test.Tasty
import           Test.Tasty.HUnit
import           Time.Types
import           Tsuru.Parser

---

main :: IO ()
main = defaultMain suite

assertRight :: Either [Char] b -> Assertion
assertRight t = case t of
  Left e  -> assertFailure e
  Right _ -> assert True

suite :: TestTree
suite = testGroup "Unit Tests"
  [ testCase "flatten" $ flatten [1,2,3,4] @?= 1234
  , testCase "Parse Quote" . assertRight $ A.parseOnly (quote dateT) quoteT
  ]

dateT :: DateTime
dateT = DateTime (Date 2018 February 26) (TimeOfDay (Hours 9) (Minutes 2) (Seconds 40) (NanoSeconds 0))

quoteT :: BS.ByteString
quoteT = BS.pack bytes

bytes :: [Word8]
bytes =
  [
    -- Header noise that should be properly skipped.
    0x00, 0x00, 0x00, 0x00, 0x00
  -- B6034
  , 0x42 , 0x36 , 0x30 , 0x33 , 0x34
  -- Issue Code
  , 0x4b , 0x52 , 0x34 , 0x32 , 0x30 , 0x31 , 0x46 , 0x33 , 0x32 , 0x37 , 0x30 , 0x35
  -- Issue seq.-no, Market Status Type, Total bid quote volume
  , 0x30 , 0x30 , 0x31 , 0x31 , 0x30 , 0x30 , 0x30 , 0x32 , 0x32 , 0x36 , 0x38 , 0x31
  -- Bids
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  -- Total Ask Quote Volume
  , 0x30 , 0x30 , 0x30 , 0x37 , 0x32 , 0x32 , 0x34
  -- Asks
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  -- Skippable
  , 0x30 , 0x30 , 0x39 , 0x34 , 0x37 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x33 , 0x36 , 0x35
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30 , 0x30
  -- Quote Accept Time
  , 0x30 , 0x38 , 0x35 , 0x39 , 0x35 , 0x39 , 0x39 , 0x37
  -- End of Message
  , 0xff
  ]
